name: 🌐 Deploy Web to Vercel

on:
  push:
    branches: [main]
    paths:
      - 'apps/web/**'
      - 'packages/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - '.github/workflows/deploy-web.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/web/**'
      - 'packages/**'

jobs:
  test:
    name: 🧪 Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run linting
        run: pnpm --filter @task-agent/web lint

      - name: 🏗️ Build application
        run: pnpm --filter @task-agent/web build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_API_URL: https://taskagent-api.fly.dev
          NEXT_PUBLIC_APP_URL: https://taskagent.vercel.app

      - name: 🧪 Run tests (if available)
        run: |
          if [ -f "apps/web/package.json" ] && grep -q '"test"' apps/web/package.json; then
            pnpm --filter @task-agent/web test
          else
            echo "No tests configured, skipping test step"
          fi

  deploy:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: 📥 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🚀 Deploy to Vercel using official CLI
        run: |
          # Install Vercel CLI
          npm install -g vercel@latest
          
          # Deploy to production
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }} --yes
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_API_URL: https://taskagent-api.fly.dev
          NEXT_PUBLIC_APP_URL: https://taskagent.vercel.app

      - name: ✅ Deployment notification
        if: success()
        run: |
          echo "🎉 Frontend successfully deployed to: https://taskagent.vercel.app"

  health-check:
    name: 🏥 Frontend Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: ⏳ Wait for deployment
        run: sleep 30

      - name: 🏥 Check frontend accessibility
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://taskagent.vercel.app)
          if [ $response -eq 200 ]; then
            echo "✅ Frontend health check passed (HTTP $response)"
          else
            echo "❌ Frontend health check failed (HTTP $response)"
            exit 1
          fi