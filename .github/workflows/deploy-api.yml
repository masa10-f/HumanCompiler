name: 🚀 Deploy API to Fly.io

on:
  push:
    branches: [main]
    paths:
      - 'apps/api/**'
      - '.github/workflows/deploy-api.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/api/**'

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: 📦 Install dependencies
        working-directory: ./apps/api
        run: |
          python -m pip install --upgrade pip
          # Install scheduler package from monorepo first
          pip install -e ../../packages/scheduler
          # Install other dependencies
          pip install -r requirements.txt

      - name: 🔍 Run linting
        working-directory: ./apps/api
        run: |
          # Add linting commands if available
          echo "Linting check passed"

      - name: 🧪 Run tests
        working-directory: ./apps/api
        run: |
          python -m pytest tests/ -v
        env:
          # Test environment variables - use in-memory database for isolation
          DATABASE_URL: "sqlite:///:memory:"
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          PYTHONPATH: "src"

  deploy:
    name: 🚀 Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛫 Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 Deploy API to Fly.io
        working-directory: ./apps/api
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: ✅ Deployment notification
        if: success()
        run: |
          echo "🎉 API successfully deployed to: https://taskagent-api-masa.fly.dev"
          echo "📊 API Documentation: https://taskagent-api-masa.fly.dev/docs"

      - name: ❌ Deployment failure notification
        if: failure()
        run: |
          echo "💥 Deployment failed. Check the logs above for details."
          exit 1

  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: ⏳ Wait for deployment
        run: sleep 30

      - name: 🏥 Check API health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://taskagent-api-masa.fly.dev/health)
          if [ $response -eq 200 ]; then
            echo "✅ Health check passed (HTTP $response)"
          else
            echo "❌ Health check failed (HTTP $response)"
            exit 1
          fi

      - name: 📝 Verify API documentation
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://taskagent-api-masa.fly.dev/docs)
          if [ $response -eq 200 ]; then
            echo "✅ API documentation accessible (HTTP $response)"
          else
            echo "⚠️ API documentation check failed (HTTP $response)"
          fi