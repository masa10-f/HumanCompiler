name: 🚀 Deploy API to Fly.io

on:
  push:
    branches: [main]
    paths:
      - 'apps/api/**'
      - '.github/workflows/deploy-api.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/api/**'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: 📦 Install dependencies
        working-directory: ./apps/api
        run: |
          python -m pip install --upgrade pip
          # Install dependencies
          pip install -r requirements.txt

      - name: 🔍 Run Ruff Linting
        working-directory: ./apps/api
        run: |
          ruff check . --output-format=github
          ruff format --check .

      - name: 🔍 Run MyPy Type Checking
        working-directory: ./apps/api
        run: |
          mypy src --config-file pyproject.toml

      - name: 🔒 Run Bandit Security Scanning
        working-directory: ./apps/api
        run: |
          bandit -r src -f json -o bandit-report.json || true
          bandit -r src

      - name: 🛡️ Run Safety Dependency Check
        working-directory: ./apps/api
        run: |
          safety scan --output json > safety-report.json || true
          safety scan || true

      - name: 🧪 Run tests with coverage
        working-directory: ./apps/api
        run: |
          pytest --cov=src --cov-report=xml --cov-report=html --cov-report=term -v
        env:
          # Test environment variables - use in-memory database for isolation
          DATABASE_URL: "sqlite:///:memory:"
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          PYTHONPATH: "src"

  deploy-preview:
    name: 🚀 Deploy to Preview (Fly.io)
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛫 Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🔧 Set Preview secrets
        working-directory: ./apps/api
        run: |
          # Use preview database if available, otherwise fallback to production DB
          DATABASE_URL_VALUE="${{ secrets.DATABASE_URL_PREVIEW || secrets.DATABASE_URL }}"

          flyctl secrets set \
            DATABASE_URL="$DATABASE_URL_VALUE" \
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
            SUPABASE_ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}" \
            SUPABASE_SERVICE_ROLE_KEY="${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            --app taskagent-api-masa-preview
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy to Preview
        working-directory: ./apps/api
        run: flyctl deploy --config fly.preview.toml --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 💬 Comment Preview URL
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `🚀 **Preview Environment Deployed!**

                📡 API: https://taskagent-api-masa-preview.fly.dev
                📊 Docs: https://taskagent-api-masa-preview.fly.dev/docs
                🏥 Health: https://taskagent-api-masa-preview.fly.dev/health

                This preview will auto-scale to zero after 5 minutes of inactivity to save costs.`
              })
              console.log('✅ Successfully commented preview URL on PR')
            } catch (error) {
              console.log('⚠️ Failed to comment on PR:', error.message)
              console.log('📡 Preview deployed at: https://taskagent-api-masa-preview.fly.dev')
            }

      - name: ✅ Preview deployment success
        if: success()
        run: |
          echo "🎉 Preview API successfully deployed!"
          echo "📡 Preview URL: https://taskagent-api-masa-preview.fly.dev"
          echo "📊 Docs: https://taskagent-api-masa-preview.fly.dev/docs"

  deploy-production:
    name: 🚀 Deploy to Production (Fly.io)
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🛫 Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🔧 Set Production secrets
        working-directory: ./apps/api
        run: |
          flyctl secrets set \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
            SUPABASE_ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}" \
            SUPABASE_SERVICE_ROLE_KEY="${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            --app taskagent-api-masa
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy to Production
        working-directory: ./apps/api
        run: flyctl deploy --config fly.toml --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: ✅ Deployment notification
        if: success()
        run: |
          echo "🎉 API successfully deployed to: https://taskagent-api-masa.fly.dev"
          echo "📊 API Documentation: https://taskagent-api-masa.fly.dev/docs"

      - name: ❌ Deployment failure notification
        if: failure()
        run: |
          echo "💥 Deployment failed. Check the logs above for details."
          exit 1

  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: ⏳ Wait for deployment
        run: sleep 30

      - name: 🏥 Check API health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://taskagent-api-masa.fly.dev/health)
          if [ $response -eq 200 ]; then
            echo "✅ Health check passed (HTTP $response)"
          else
            echo "❌ Health check failed (HTTP $response)"
            exit 1
          fi

      - name: 📝 Verify API documentation
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://taskagent-api-masa.fly.dev/docs)
          if [ $response -eq 200 ]; then
            echo "✅ API documentation accessible (HTTP $response)"
          else
            echo "⚠️ API documentation check failed (HTTP $response)"
          fi
